/*
 * File: Category.cs

 * Description:
 *     This file defines the Category class, which represents a category entity in the 
 *     e-commerce platform. The class is used to store and manage category-related 
 *     information in a MongoDB database.
 * 
 * Fields:
 *     - Id (ObjectId):
 *         The unique identifier for the category, automatically generated by MongoDB. 
 *         It is marked with [BsonId] to denote that this field is the primary key.
 *     
 *     - CategoryId (string):
 *         A custom ID for the category (user-defined or system-generated). It must 
 *         be unique and is used for operations that reference categories.
 * 
 *     - Name (string):
 *         The name of the category. This field is required and cannot be null.
 * 
 *     - Description (string?):
 *         An optional description of the category, providing additional details about 
 *         the category.
 * 
 *     - Status (string):
 *         Indicates the status of the category, with a default value of "active". 
 *         Possible values could include "active", "inactive", etc., based on 
 *         business requirements.
 * 
 *     - isDeleted (bool):
 *         A flag that indicates whether the category is soft-deleted. The default 
 *         value is false, meaning the category is active. Setting this to true 
 *         effectively deactivates the category without permanently deleting it 
 *         from the database.
 * 

 * 
 * Usage:
 *     This class is used within the CategoryRepository for managing categories 
 *     in MongoDB. It provides a representation of the category data structure 
 *     stored in the database.
 * 

 */

using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;

namespace api.Models
{
    public class Category
    {
        [BsonId]
        public ObjectId Id { get; set; }
        public string CategoryId { get; set; } = null!;
        public string Name { get; set; } = null!;
        public string? Description { get; set; }
        public string Status { get; set; } = "active"!;
        public bool isDeleted { get; set; } = false;
    }
}