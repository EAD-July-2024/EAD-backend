/*
 * File: Order.cs

 * Description:
 *     This file defines the Order class, representing an order entity in the 
 *     e-commerce platform. The class is used to store and manage order-related 
 *     information in a MongoDB database.
 * 
 * Fields:
 *     - Id (ObjectId):
 *         The unique identifier for the order, automatically generated by MongoDB. 
 *         It is marked with [BsonId] to denote that this field is the primary key.
 * 
 *     - OrderId (string):
 *         A custom ID for the order, which must be unique. This ID is used 
 *         in references to the order.
 * 
 *     - CustomerId (string):
 *         The ID of the customer who placed the order. It links the order to the 
 *         corresponding customer.
 * 
 *     - TotalPrice (float):
 *         The total price of the order, representing the cost of all products 
 *         within the order.
 * 
 *     - Status (string):
 *         Represents the status of the order. The default value is "Purchased", 
 *         but it could also take other statuses like "Processing", "Shipped", 
 *         "Delivered", etc., depending on the e-commerce flow.
 * 
 *     - Note (string):
 *         An optional field for any additional notes related to the order. 
 *         This can be left empty by default.
 * 
 *     - CreatedDate (DateTime):
 *         The date and time when the order was created. It defaults to the 
 *         current date and time upon order creation.
 * 
 *     - UpdatedDate (DateTime):
 *         The date and time when the order was last updated. It also defaults 
 *         to the current date and time and should be modified whenever an order 
 *         is updated.

 * 
 * Usage:
 *     This class is used within the OrderRepository to manage orders in MongoDB. 
 *     It provides a representation of the order data structure stored in the 
 *     database.
 * 

 */

using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;

namespace api.Models
{
    public class Order
    {
        [BsonId]
        public ObjectId Id { get; set; }
        public string OrderId { get; set; } = null!;
        public string CustomerId { get; set; } = null!;
        public float TotalPrice { get; set; }
        public string Status { get; set; } = "Purchased";
        public string Note { get; set; } = "";
        public DateTime CreatedDate { get; set; } = DateTime.Now;
        public DateTime UpdatedDate { get; set; } = DateTime.Now;
    }
}
